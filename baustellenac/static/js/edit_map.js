// Generated by CoffeeScript 1.4.0

$.fn.sites = function(opts) {
  var default_lat, default_lng, drawControl, drawnItems, icon, icon_default, icon_sidewalk, init, init_edit_map, init_icon, init_marker_polyline, init_static_map, map, map_attribution, map_url, map_zoom, marker, max_zoom, polyline, set_marker_latlng_to_form, set_static_marker, set_static_polyline, smarker, spolyline, staticmap;
  if (opts == null) {
    opts = {};
  }
  map_zoom = 15;
  max_zoom = 18;
  default_lat = 50.7753455;
  default_lng = 6.0838868;
  map = null;
  staticmap = null;
  marker = null;
  smarker = null;
  drawControl = null;
  drawnItems = null;
  polyline = null;
  spolyline = null;
  icon_default = L.icon({
    iconUrl: '/static/img/Under_construction_icon-red.svg',
    iconSize: [38, 38],
    popupAnchor: [0, -15],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
  });
  icon_sidewalk = L.icon({
    iconUrl: '/static/img/Under_construction_icon-yellow.svg',
    iconSize: [32, 32],
    popupAnchor: [0, -15],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
  });
  icon = null;
  map_url = $("body").data("tileurl");
  map_attribution = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>, Baustellendaten der <a href="http://aachen.de/baustellen">Stadt Aachen</a>. Informationen ohne Gewähr.';
  init = function() {
    init_icon();
    init_marker_polyline();
    $('.showmap').click(function(event) {
      $('#mapmodal').modal('show');
      if (!map) {
        init_edit_map();
      }
      return false;
    });
    init_static_map();
    $('input#sidewalk_only').on('change', function() {
      if ($('input#sidewalk_only').attr('checked') === 'checked') {
        icon = icon_sidewalk;
      } else {
        icon = icon_default;
      }
      if (marker != null) {
        marker.setIcon(icon);
      }
      if (smarker != null) {
        return smarker.setIcon(icon);
      }
    });
    $('#streetsselect').select2({
      placeholder: "Suchen Sie nach einer Strasse...",
      allowClear: true,
      openOnEnter: true
    });
    $('#streetsselect').on('keydown', function(e) {
      return $('#streetsselect').select2('open');
    });
    $('#streetsselect').on('change', function(e) {
      var street_latlng;
      street_latlng = JSON.parse($('#streetsselect').val());
      if (marker !== null) {
        drawnItems.removeLayer(marker);
      }
      marker = L.marker(street_latlng, {
        draggable: true,
        icon: icon
      });
      drawnItems.addLayer(marker);
      map.panTo(street_latlng);
      set_marker_latlng_to_form();
      return set_static_marker();
    });
    $('#mapmodal').on('shown', function() {
      return $('#streetsselect').focus();
    });
    return $('#mapmodal').on('hidden', function() {
      set_marker_latlng_to_form();
      set_static_marker();
      $('#polyline').val(JSON.stringify(polyline.getLatLngs()));
      return set_static_polyline();
    });
  };
  init_icon = function() {
    if ($('#siteconfig').data('sidewalk_only') === 'True') {
      return icon = icon_sidewalk;
    } else {
      return icon = icon_default;
    }
  };
  init_marker_polyline = function() {
    var lat, lng, pl_latlngs;
    lat = $('#siteconfig').data('lat');
    lng = $('#siteconfig').data('lng');
    if ((lat != null) && (lng != null)) {
      marker = L.marker([lat, lng], {
        draggable: true,
        icon: icon
      });
    }
    pl_latlngs = $('#siteconfig').data('polyline');
    if (pl_latlngs != null) {
      return polyline = L.polyline(pl_latlngs, {
        clickable: true,
        weight: 10
      });
    }
  };
  init_edit_map = function() {
    var latlng;
    if (marker != null) {
      latlng = marker.getLatLng();
    } else {
      latlng = [default_lat, default_lng];
    }
    map = L.map('map', {
      center: latlng,
      zoom: map_zoom
    });
    L.tileLayer(map_url, {
      attribution: map_attribution,
      maxZoom: max_zoom
    }).addTo(map);
    drawnItems = new L.FeatureGroup();
    if (marker != null) {
      drawnItems.addLayer(marker);
    }
    if (polyline != null) {
      drawnItems.addLayer(polyline);
    }
    map.addLayer(drawnItems);
    drawControl = new L.Control.Draw({
      position: 'topleft',
      draw: {
        marker: {
          draggable: true,
          icon: icon
        },
        polygon: false,
        circle: false,
        rectangle: false
      },
      edit: {
        featureGroup: drawnItems,
        edit: false
      }
    });
    map.addControl(drawControl);
    return map.on('draw:created', function(e) {
      var layer, type;
      type = e.layerType;
      layer = e.layer;
      if (type === 'marker') {
        drawnItems.removeLayer(marker);
        marker = layer;
        layer.options.draggable = true;
      }
      if (type === 'polyline') {
        polyline = layer;
        layer.options.weight = 10;
      }
      return drawnItems.addLayer(layer);
    });
  };
  init_static_map = function() {
    var latlng;
    if (marker != null) {
      latlng = marker.getLatLng();
    } else {
      latlng = [default_lat, default_lng];
    }
    staticmap = L.map('staticmap', {
      zoom: 16,
      center: latlng,
      dragging: false,
      scrollWheelZoom: false,
      doubleClickZoom: false,
      zoomControl: false
    });
    L.tileLayer(map_url, {
      maxZoom: max_zoom
    }).addTo(staticmap);
    if (marker != null) {
      set_static_marker();
    }
    if (polyline != null) {
      return set_static_polyline();
    }
  };
  set_static_marker = function() {
    if (smarker !== null) {
      staticmap.removeLayer(smarker);
    }
    if (marker != null) {
      smarker = L.marker(marker.getLatLng(), {
        draggable: false,
        clickable: false,
        icon: icon
      });
      staticmap.addLayer(smarker);
      return staticmap.panTo(marker.getLatLng());
    }
  };
  set_static_polyline = function() {
    if (spolyline != null) {
      staticmap.removeLayer(spolyline);
    }
    if (polyline != null) {
      spolyline = L.polyline(polyline.getLatLngs(), {
        weight: 10
      });
      return staticmap.addLayer(spolyline);
    }
  };
  set_marker_latlng_to_form = function() {
    if (marker != null) {
      $('input[name=lat]').val(marker.getLatLng().lat);
      return $('input[name=lng]').val(marker.getLatLng().lng);
    }
  };
  $(this).each(init);
  return this;
};

$.fn.mapsearch = function(opts) {
  var $this, init;
  if (opts == null) {
    opts = {};
  }
  $this = $(this);
  init = function() {};
  $(this).each(init);
  return this;
};

$(document).ready(function() {
  var submit_organisation;
  $("#streetsselect").mapsearch();
  $("body").sites();
  $('#organisation_add_button').click(function() {
    $('#organisationmodal').modal('show');
    $('#organisation-name').val('');
    $('#organisation-name').focus();
    return $('#organisation-name').keypress(function(e) {
      if (e.which === 13) {
        $('#organisation_add').focus();
        submit_organisation();
        return $('#organisationmodal').modal('hide');
      }
    });
  });
  $('#organisation_add').click(function() {
    return submit_organisation();
  });
  return submit_organisation = function() {
    if ($('#organisation-name').val() !== '') {
      return $.ajax({
        url: "/organisation/add",
        type: 'POST',
        data: {
          name: $('#organisation-name').val()
        },
        error: function(data) {
          return console.log('error');
        },
        success: function(data) {
          $('#organisation').append($("<option></option>").attr("value", data['name']).text(data['name']));
          return $('#organisation').val(data['name']);
        }
      });
    }
  };
});
