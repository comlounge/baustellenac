// Generated by CoffeeScript 1.4.0

$.fn.sites = function(opts) {
  var default_lat, default_lng, drawControl, drawnItems, icon, icon_default, icon_sidewalk, init, init_edit_map, init_icon, init_static_map, map, map_attribution, map_url, map_zoom, marker, max_zoom, polyline, set_marker_latlng_to_form, set_static_marker, set_static_polyline, smarker, spolyline, staticmap;
  if (opts == null) {
    opts = {};
  }
  map_zoom = 15;
  max_zoom = 18;
  default_lat = 50.7753455;
  default_lng = 6.0838868;
  map = null;
  staticmap = null;
  marker = null;
  smarker = null;
  drawControl = null;
  drawnItems = null;
  polyline = null;
  spolyline = null;
  icon_default = L.icon({
    iconUrl: '/static/img/Under_construction_icon-red.svg',
    iconSize: [38, 95],
    popupAnchor: [0, -15],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
  });
  icon_sidewalk = L.icon({
    iconUrl: '/static/img/Under_construction_icon-yellow.svg',
    iconSize: [32, 75],
    popupAnchor: [0, -15],
    shadowSize: [68, 95],
    shadowAnchor: [22, 94]
  });
  icon = null;
  map_url = $("body").data("tileurl");
  map_attribution = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>, Baustellendaten der <a href="http://aachen.de/baustellen">Stadt Aachen</a>. Informationen ohne Gewähr.';
  init = function() {
    var lat, lng, pl_latlngs;
    init_icon();
    init_static_map();
    lat = $('#siteconfig').data('lat');
    lng = $('#siteconfig').data('lng');
    pl_latlngs = $('#siteconfig').data('polyline');
    if (!(lat != null) || !(lng != null) || lat === '' || lng === '') {
      lat = default_lat;
      lng = default_lng;
    }
    return $('.showmap').click(function() {
      $('#mapmodal').modal('show');
      if (!map) {
        return init_edit_map(lat, lng, pl_latlngs);
      }
    });
  };
  init_icon = function() {
    if ($('#site-form').data('sidewalk_only') === 'True') {
      return icon = icon_sidewalk;
    } else {
      return icon = icon_default;
    }
  };
  init_edit_map = function(lat, lng, pl_latlngs) {
    map = L.map('map', {
      center: [lat, lng],
      zoom: map_zoom
    });
    L.tileLayer(map_url, {
      attribution: map_attribution,
      maxZoom: max_zoom
    }).addTo(map);
    drawnItems = new L.FeatureGroup();
    if (lat !== default_lat && lng !== default_lng) {
      marker = L.marker([lat, lng], {
        draggable: false,
        clickable: false,
        icon: icon
      });
      drawnItems.addLayer(marker);
    }
    if (pl_latlngs) {
      polyline = L.polyline(pl_latlngs, {
        clickable: true
      });
      drawnItems.addLayer(polyline);
    }
    map.addLayer(drawnItems);
    drawControl = new L.Control.Draw({
      position: 'topleft',
      draw: {
        marker: {
          icon: icon
        },
        polygon: false,
        circle: false,
        rectangle: false
      },
      edit: {
        featureGroup: drawnItems,
        edit: false
      }
    });
    map.addControl(drawControl);
    return map.on('draw:created', function(e) {
      var layer, type;
      type = e.layerType;
      layer = e.layer;
      if (type === 'marker') {
        drawnItems.removeLayer(marker);
        marker = layer;
        set_marker_latlng_to_form();
        set_static_marker([marker.getLatLng().lat, marker.getLatLng().lng]);
      }
      if (type === 'polyline') {
        drawnItems.removeLayer(polyline);
        polyline = layer;
        $('#polyline').val(JSON.stringify(polyline._latlngs));
        set_static_polyline(polyline._latlngs);
      }
      return drawnItems.addLayer(layer);
    });
  };
  init_static_map = function() {
    var lat, lng, platlngs;
    lat = $('#siteconfig').data('lat');
    lng = $('#siteconfig').data('lng');
    platlngs = $('#siteconfig').data('polyline');
    console.log(lat);
    console.log(lng);
    console.log(typeof poloyline !== "undefined" && poloyline !== null);
    if (!(lat != null) || !(lng != null) || lat === '' || lng === '') {
      lat = default_lat;
      lng = default_lng;
    }
    staticmap = L.map('staticmap', {
      zoom: 16,
      center: [lat, lng],
      dragging: false,
      scrollWheelZoom: false,
      doubleClickZoom: false,
      zoomControl: false
    });
    L.tileLayer(map_url, {
      maxZoom: max_zoom
    }).addTo(staticmap);
    if (lat !== default_lat) {
      set_static_marker([lat, lng]);
    }
    if (platlngs != null) {
      return set_static_polyline(platlngs);
    }
  };
  set_static_marker = function(latlng) {
    if (smarker !== null) {
      staticmap.removeLayer(smarker);
    }
    smarker = L.marker(latlng, {
      draggable: false,
      clickable: false,
      icon: icon
    });
    staticmap.addLayer(smarker);
    return staticmap.panTo(latlng);
  };
  set_static_polyline = function(latlngs) {
    if (spolyline != null) {
      staticmap.removeLayer(spolyline);
    }
    spolyline = L.polyline(latlngs);
    return staticmap.addLayer(spolyline);
  };
  set_marker_latlng_to_form = function() {
    var lat, lng;
    lat = marker.getLatLng().lat;
    lng = marker.getLatLng().lng;
    $('input[name=lat]').val(lat);
    return $('input[name=lng]').val(lng);
  };
  $(this).each(init);
  return this;
};

$(document).ready(function() {
  return $("body").sites();
});
